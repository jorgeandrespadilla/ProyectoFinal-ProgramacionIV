@model ProyectoFinal.Web.ViewModels.SubastaCreateViewModel

@{
    ViewBag.Title = "Crear Subasta";
}

<h2>Crear Subasta</h2>


@using (Html.BeginForm("Create",
      "Subastas",
      FormMethod.Post,
      new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <hr />
    <div class="d-flex justify-content-center mt-4">
        <div class="col-sm-6 me-sm-4">
            <div class="preview-wrapper" title="Ampliar imagen">
                <img id="image-preview" class="card-img-top img-fluid" src="~/Content/Images/missing-img.jpg" onclick="img_box(this)">
            </div>
        </div>
        <div class="col-sm-6 ms-4 form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NombreProducto, "Nombre del producto", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control mt-2" } })
                @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DescripcionProducto, "Descripción del producto", htmlAttributes: new { @class = "control-label mt-3" })
                @Html.EditorFor(model => model.DescripcionProducto, new { htmlAttributes = new { @class = "form-control mt-2" } })
                @Html.ValidationMessageFor(model => model.DescripcionProducto, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Imagen, "Imagen", htmlAttributes: new { @class = "control-label  mt-2" })
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Imagen, "Cargar Archivo", htmlAttributes: new { @class = "btn btn-primary mt-2" })
                    @Html.TextBoxFor(m => m.Imagen, new { @class = "custom-file-input", type = "file", accept = "image/*", onchange = "showPreview(event);" })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrecioInicial, "Precio Inicial", htmlAttributes: new { @class = "control-label mt-3" })
                @Html.EditorFor(model => model.PrecioInicial, new { htmlAttributes = new { @class = "form-control mt-2" } })
                @Html.ValidationMessageFor(model => model.PrecioInicial, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.fechaLimite, "Fecha limite", htmlAttributes: new { @class = "control-label mt-3" })
                @Html.EditorFor(model => model.fechaLimite, new { htmlAttributes = new { @class = "form-control mt-2" } })
                @Html.ValidationMessageFor(model => model.fechaLimite, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 mt-4 mb-2">
                    <input type="submit" value="Crear" class="btn btn-lg btn-outline-primary px-4" />
                </div>
            </div>
            @Html.ValidationMessage("generalError", new { @class = "text-danger" })
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function showPreview(event) {
        if (event.target.files.length > 0) {
            var src = URL.createObjectURL(event.target.files[0]);
            var preview = document.getElementById("image-preview");
            preview.src = src;
            preview.style.display = "block";
        }
    }
</script>